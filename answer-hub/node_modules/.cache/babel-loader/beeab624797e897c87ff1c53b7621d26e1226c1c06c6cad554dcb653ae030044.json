{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IARA AMANCIO\\\\OneDrive\\\\Desktop\\\\ProjetoIITecWeb\\\\answer-hub\\\\src\\\\components\\\\questionComents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport imagemUser from '../images/icone-usuario.svg';\nimport { set } from 'express/lib/application';\n\n/* Todos os comentários*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst respostas = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'acho que não ein',\n  data: 'today'\n}, {\n  id: 2,\n  idUser: 2,\n  idTopico: 1,\n  resposta: 'calma calabreso',\n  data: 'today'\n}, {\n  id: 3,\n  idUser: 2,\n  idTopico: 2,\n  resposta: 'Incrivel',\n  data: 'today'\n}];\n\n/* Todas as perguntas*/\nconst topicos = [{\n  id: 1,\n  idUser: 1,\n  title: 'Blockchain developer best practices on innovationchain',\n  data: '3 weeks'\n}, {\n  id: 2,\n  idUser: 2,\n  title: 'Como estilizar um button?',\n  data: '2 weeks'\n}];\n\n/* usuarios */\nconst usuario = [{\n  id: 1,\n  nome: 'Iara Amancio',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}, {\n  id: 2,\n  nome: 'Iara Costa',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}];\nconst QuestionComents = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [title, setTitle] = useState('');\n  const [idUser, setIdUser] = useState('');\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    /* Obter todos os comentários com o mesmo idTopico */\n    const foundComments = respostas.filter(q => q.idTopico === parseInt(id));\n    setComments(foundComments);\n\n    /* Encontrar o titulo dos comentários exibidos */\n    const foundTitle = topicos.find(t => t.id === parseInt(id));\n    if (foundTitle) {\n      setTitle(foundTitle.title);\n    }\n    setIdUser(1);\n  }, [id]);\n  const AddComment = () => {\n    if (newComment) {\n      const newCommentText = {\n        id: comments.length + 1,\n        idUser: 1,\n        idTopico: parseInt(id),\n        resposta: newComment,\n        data: 'today'\n      };\n      setComments([...comments, newCommentText]);\n    }\n  };\n  if (!comments) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nenhum coment\\xE1rio!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  const ReturnNomeUsuario = id => {\n    let index = usuario.find(u => u.id === parseInt(id));\n    return index.nome;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item column-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"titulo-question\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row space-between\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icone-usuario\",\n              src: imagemUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"username\",\n              children: ReturnNomeUsuario(idUser)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [comments.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment column-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.resposta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icone-usuario\",\n              src: imagemUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"username\",\n              children: ReturnNomeUsuario(answer.idUser)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"data\",\n              children: answer.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"public-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicione um coment\\xE1rio\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AddComment,\n          children: \"SEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-voltar\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionComents, \"n+QF01YnnXqi0ZO2ZdIQiU+1Q4M=\", false, function () {\n  return [useParams];\n});\n_c = QuestionComents;\nexport default QuestionComents;\nvar _c;\n$RefreshReg$(_c, \"QuestionComents\");","map":{"version":3,"names":["React","useState","useEffect","useParams","imagemUser","set","jsxDEV","_jsxDEV","respostas","id","idUser","idTopico","resposta","data","topicos","title","usuario","nome","email","senha","QuestionComents","_s","comments","setComments","setTitle","setIdUser","newComment","setNewComment","foundComments","filter","q","parseInt","foundTitle","find","t","AddComment","newCommentText","length","children","fileName","_jsxFileName","lineNumber","columnNumber","ReturnNomeUsuario","index","u","className","src","map","answer","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/IARA AMANCIO/OneDrive/Desktop/ProjetoIITecWeb/answer-hub/src/components/questionComents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport imagemUser from '../images/icone-usuario.svg'\r\nimport { set } from 'express/lib/application';\r\n\r\n/* Todos os comentários*/\r\nconst respostas = [\r\n    {id:1, idUser: 1, idTopico: 1, resposta: 'acho que não ein', data: 'today'},\r\n    {id:2, idUser: 2, idTopico: 1, resposta: 'calma calabreso', data: 'today'},\r\n    {id:3, idUser: 2, idTopico: 2, resposta: 'Incrivel', data: 'today'}\r\n]\r\n\r\n/* Todas as perguntas*/\r\nconst topicos = [\r\n    {id: 1, idUser: 1, title: 'Blockchain developer best practices on innovationchain', data: '3 weeks'},\r\n    {id: 2, idUser:2, title: 'Como estilizar um button?', data: '2 weeks'},  \r\n]\r\n\r\n/* usuarios */\r\nconst usuario = [\r\n  {id: 1, nome: 'Iara Amancio', email: 'iara@gmail.com', senha: '1234'},\r\n  {id: 2, nome: 'Iara Costa', email: 'iara@gmail.com', senha: '1234'},\r\n]\r\n\r\nconst QuestionComents = () => {\r\n\r\n  const { id } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [idUser, setIdUser] = useState('')\r\n  const [newComment, setNewComment] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    /* Obter todos os comentários com o mesmo idTopico */\r\n    const foundComments = respostas.filter(q => q.idTopico === parseInt(id));\r\n    setComments(foundComments);\r\n\r\n    /* Encontrar o titulo dos comentários exibidos */\r\n    const foundTitle = topicos.find(t => t.id === parseInt(id));\r\n    if(foundTitle){\r\n        setTitle(foundTitle.title);\r\n    }\r\n\r\n    setIdUser(1)\r\n\r\n  }, [id]);\r\n\r\n  const AddComment = () => {\r\n    if (newComment) {\r\n        const newCommentText = {\r\n            id: comments.length + 1,\r\n            idUser: 1,  \r\n            idTopico: parseInt(id),\r\n            resposta: newComment,\r\n            data: 'today'\r\n        };\r\n        setComments([...comments, newCommentText]);\r\n    }\r\n    };\r\n\r\n  \r\n  if (!comments) {\r\n    return <div>Nenhum comentário!</div>;\r\n  }\r\n\r\n  const ReturnNomeUsuario = (id) => {\r\n    let index = usuario.find(u => u.id === parseInt(id))\r\n    return index.nome;\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-detail\">\r\n\r\n        <div className=\"question-item column-between\">\r\n            <h3 className='titulo-question'>{title}</h3>\r\n            <div className='row space-between'>\r\n                  <div className='row'>\r\n                      <div>\r\n                          <img className='icone-usuario' src={imagemUser}></img>\r\n                      </div>   \r\n                      <div>\r\n                        <p className='username'>{ReturnNomeUsuario(idUser)}</p>\r\n                      </div>                 \r\n                  </div>         \r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"answers\">\r\n            {comments.map((answer, index) => (\r\n            <div key={index} className=\"comment column-between\">\r\n                   <p >{answer.resposta}</p>\r\n                   <div className='row'>\r\n                      <div>\r\n                          <img className='icone-usuario' src={imagemUser}></img>\r\n                      </div>\r\n                      <div>\r\n                        <p className='username'>{ReturnNomeUsuario(answer.idUser)}</p>\r\n                        <p className='data'>{answer.data}</p>\r\n                      </div>\r\n                  </div>\r\n            </div>\r\n            ))}\r\n            <div className=\"public-comment\">\r\n                <input type=\"text\" placeholder=\"Adicione um comentário\" \r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}/>\r\n                <button onClick={AddComment}>SEND</button>\r\n            </div>\r\n        </div>\r\n        <a href='/'><button className='button-voltar'>Voltar</button></a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionComents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}