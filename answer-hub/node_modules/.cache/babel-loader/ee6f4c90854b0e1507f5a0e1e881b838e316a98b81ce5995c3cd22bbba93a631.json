{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IARA AMANCIO\\\\OneDrive\\\\Desktop\\\\ProjetoIITecWeb\\\\answer-hub\\\\src\\\\components\\\\questionComentsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QuestionComents from \"./questionComents\";\nimport { useParams } from \"react-router-dom\";\nimport imagemUser from '../images/icone-usuario.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usuario = [{\n  id: 1,\n  nome: 'Iara Amancio',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}, {\n  id: 2,\n  nome: 'Iara Costa',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}];\nconst topicos = [{\n  id: 1,\n  idUser: 1,\n  title: 'Blockchain developer best practices on innovationchain',\n  data: '3 weeks'\n}, {\n  id: 2,\n  idUser: 2,\n  title: 'Como estilizar um button?',\n  data: '2 weeks'\n}];\nconst likeTopicos = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1\n}, {\n  id: 2,\n  idUser: 2,\n  idTopico: 1\n}];\nconst respostas = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'acho que não ein',\n  data: 'today'\n}, {\n  id: 2,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'calma calabreso',\n  data: 'today'\n}];\nconst likeRespostas = [{\n  id: 1,\n  idUser: 1,\n  idResposta: 1\n}];\nconst QuestionCommentsList = () => {\n  _s();\n  const [answers, SetAnswers] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const {\n    idTopic\n  } = useParams();\n  const idUserLogged = 1;\n  useEffect(() => {\n    /*\r\n    const fetchQuestion = async () => {\r\n        try{\r\n            const responde = await axios.get('api)}\r\n            setQuestion(responde.data)\r\n        } catch (error){\r\n            console.log(\"Error\")}\r\n         }\r\n      fetchQuestion();\r\n       */\n\n    SetAnswers(respostas.filter(resposta => resposta.idTopico === parseInt(idTopic)));\n  }, []);\n\n  /* Retorna o topico a qual estou mostrando os comentários */\n  const foundTopico = topicos.find(u => u.id === parseInt(idTopic));\n  if (foundTopico) {\n    setIdUser(foundTopico.nome);\n  }\n  const AddComment = () => {\n    if (newComment) {\n      const newCommentText = {\n        id: comments.length + 1,\n        idUser: idUserLogged,\n        idTopico: parseInt(idTopic),\n        resposta: newComment,\n        data: 'today'\n      };\n      setComments([...comments, newCommentText]);\n      setNewComment('');\n    }\n  };\n  const getUserNameById = userId => {\n    const user = usuario.find(u => u.id === userId);\n    return user ? user.nome : 'Usuário desconhecido';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item column-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"titulo-question\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row space-between\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icone-usuario\",\n              src: imagemUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"username\",\n              children: getUserNameById(idUserLogged)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(QuestionComents, {\n        answer: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"public-comment row\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icone-usuario\",\n        src: imagemUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Adicione um coment\\xE1rio\",\n        value: newComment,\n        className: \"input-text\",\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AddComment,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-voltar\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionCommentsList, \"zcAVBY9M8ESjsh0ub32Q8DHeRaM=\", false, function () {\n  return [useParams];\n});\n_c = QuestionCommentsList;\nexport default QuestionCommentsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionCommentsList\");","map":{"version":3,"names":["React","useState","useEffect","QuestionComents","useParams","imagemUser","jsxDEV","_jsxDEV","usuario","id","nome","email","senha","topicos","idUser","title","data","likeTopicos","idTopico","respostas","resposta","likeRespostas","idResposta","QuestionCommentsList","_s","answers","SetAnswers","comments","setComments","newComment","setNewComment","idTopic","idUserLogged","filter","parseInt","foundTopico","find","u","setIdUser","AddComment","newCommentText","length","getUserNameById","userId","user","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","map","answer","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/IARA AMANCIO/OneDrive/Desktop/ProjetoIITecWeb/answer-hub/src/components/questionComentsList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport QuestionComents from \"./questionComents\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport imagemUser from '../images/icone-usuario.svg'\r\n\r\nconst usuario = [\r\n    {id: 1, nome: 'Iara Amancio', email: 'iara@gmail.com', senha: '1234'},\r\n    {id: 2, nome: 'Iara Costa', email: 'iara@gmail.com', senha: '1234'},\r\n]\r\n\r\nconst topicos = [\r\n    {id: 1, idUser: 1, title: 'Blockchain developer best practices on innovationchain', data: '3 weeks'},\r\n    {id: 2, idUser:2, title: 'Como estilizar um button?', data: '2 weeks'},\r\n]\r\n\r\nconst likeTopicos = [\r\n    {id: 1, idUser: 1, idTopico: 1},\r\n    {id: 2, idUser: 2, idTopico: 1},\r\n]\r\n\r\nconst respostas = [\r\n    {id:1, idUser: 1, idTopico: 1, resposta: 'acho que não ein', data: 'today'},\r\n    {id:2, idUser: 1, idTopico: 1, resposta: 'calma calabreso', data: 'today'}\r\n]\r\n\r\nconst likeRespostas = [\r\n    {id: 1, idUser: 1, idResposta: 1},\r\n]\r\n\r\nconst QuestionCommentsList = () => {\r\n\r\n    const [answers, SetAnswers] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const { idTopic } = useParams();\r\n\r\n    const idUserLogged = 1;\r\n\r\n    useEffect(() => {\r\n\r\n        /*\r\n        const fetchQuestion = async () => {\r\n            try{\r\n                const responde = await axios.get('api)}\r\n                setQuestion(responde.data)\r\n            } catch (error){\r\n                console.log(\"Error\")}\r\n             }\r\n\r\n        fetchQuestion();\r\n\r\n         */\r\n\r\n        SetAnswers(respostas.filter(resposta => resposta.idTopico === parseInt(idTopic)));\r\n    }, []);\r\n\r\n    /* Retorna o topico a qual estou mostrando os comentários */\r\n    const foundTopico = topicos.find(u => u.id === parseInt(idTopic))\r\n    if(foundTopico){\r\n      setIdUser(foundTopico.nome)\r\n    }\r\n\r\n    const AddComment = () => {\r\n    \r\n        if (newComment) {\r\n            const newCommentText = {\r\n                id: comments.length + 1,\r\n                idUser: idUserLogged,  \r\n                idTopico: parseInt(idTopic),\r\n                resposta: newComment,\r\n                data: 'today'\r\n            };\r\n            setComments([...comments, newCommentText]);\r\n            setNewComment('');\r\n        }\r\n        };\r\n\r\n        const getUserNameById = (userId) => {\r\n            const user = usuario.find(u => u.id === userId);\r\n            return user? user.nome: 'Usuário desconhecido';\r\n          }\r\n\r\n    return (\r\n        <div>\r\n             <div className=\"question-item column-between\">\r\n                <h3 className='titulo-question'>{title}</h3>\r\n                <div className='row space-between'>\r\n                    <div className='row'>\r\n                        <div>\r\n                            <img className='icone-usuario' src={imagemUser}></img>\r\n                        </div>   \r\n                        <div>\r\n                            <p className='username'>{getUserNameById(idUserLogged)}</p>\r\n                        </div>                 \r\n                    </div>         \r\n                </div>\r\n            </div>\r\n            <div className=\"answers\">\r\n                {answers.map(answer => (\r\n                    <QuestionComents answer={answer}/>\r\n                ))}\r\n            </div>\r\n            <div className=\"public-comment row\">\r\n                <img className='icone-usuario' src={imagemUser}></img>\r\n                <input type=\"text\" placeholder=\"Adicione um comentário\" \r\n                        value={newComment}\r\n                        className='input-text'\r\n                        onChange={(e) => setNewComment(e.target.value)}/>\r\n                <button onClick={AddComment}>SEND</button>\r\n            </div>\r\n            <a href='/'><button className='button-voltar'>Voltar</button></a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuestionCommentsList;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}