{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IARA AMANCIO\\\\OneDrive\\\\Desktop\\\\ProjetoIITecWeb\\\\answer-hub\\\\src\\\\components\\\\coments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst respostas = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'acho que não ein',\n  data: 'today'\n}, {\n  id: 2,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'calma calabreso',\n  data: 'today'\n}, {\n  id: 3,\n  idUser: 2,\n  idTopico: 2,\n  resposta: 'Incrivel',\n  data: 'today'\n}];\nconst topicos = [{\n  id: 1,\n  idUser: 1,\n  title: 'Blockchain developer best practices on innovationchain',\n  data: '3 weeks'\n}, {\n  id: 2,\n  idUser: 2,\n  title: 'Como estilizar um button?',\n  data: '2 weeks'\n}];\nconst QuestionComents = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  useEffect(() => {\n    const foundQuestions = respostas.filter(q => q.idTopico === parseInt(id));\n    setQuestion(foundQuestions);\n  }, [id]);\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nenhum coment\\xE1rio!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: topicos.id == id.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [question.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.resposta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"public-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicione um coment\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"SEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionComents, \"K2C3avHt14lIf4ViqAMCE8AUcHY=\", false, function () {\n  return [useParams];\n});\n_c = QuestionComents;\nexport default QuestionComents;\nvar _c;\n$RefreshReg$(_c, \"QuestionComents\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","respostas","id","idUser","idTopico","resposta","data","topicos","title","QuestionComents","_s","question","setQuestion","foundQuestions","filter","q","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","answer","index","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/IARA AMANCIO/OneDrive/Desktop/ProjetoIITecWeb/answer-hub/src/components/coments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst respostas = [\r\n    {id:1, idUser: 1, idTopico: 1, resposta: 'acho que não ein', data: 'today'},\r\n    {id:2, idUser: 1, idTopico: 1, resposta: 'calma calabreso', data: 'today'},\r\n    {id:3, idUser: 2, idTopico: 2, resposta: 'Incrivel', data: 'today'}\r\n]\r\n\r\nconst topicos = [\r\n    {id: 1, idUser: 1, title: 'Blockchain developer best practices on innovationchain', data: '3 weeks'},\r\n    {id: 2, idUser:2, title: 'Como estilizar um button?', data: '2 weeks'},\r\n]\r\n\r\nconst QuestionComents = () => {\r\n  const { id } = useParams();\r\n  const [question, setQuestion] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const foundQuestions = respostas.filter(q => q.idTopico === parseInt(id));\r\n    setQuestion(foundQuestions);\r\n  }, [id]);\r\n\r\n  if (!question) {\r\n    return <div>Nenhum comentário!</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-detail\">\r\n        <div className=\"question-item\">\r\n            <h3>{topicos.id==(id).title}</h3>\r\n        </div>\r\n      <div className=\"answers\">\r\n        {question.map((answer, index) => (\r\n          <div key={index} className=\"comment\">\r\n            <p>{answer.resposta}</p>\r\n          </div>\r\n        ))}\r\n        <div className=\"public-comment\">\r\n          <input type=\"text\" placeholder=\"Adicione um comentário\" />\r\n          <button>SEND</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionComents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}