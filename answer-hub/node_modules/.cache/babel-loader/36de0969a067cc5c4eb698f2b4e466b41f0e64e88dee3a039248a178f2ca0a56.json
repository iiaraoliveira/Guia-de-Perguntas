{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IARA AMANCIO\\\\OneDrive\\\\Desktop\\\\ProjetoIITecWeb\\\\answer-hub\\\\src\\\\components\\\\questionComentsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport QuestionComents from \"./questionComents\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usuario = [{\n  id: 1,\n  nome: 'Iara Amancio',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}, {\n  id: 2,\n  nome: 'Iara Costa',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}];\nconst topicos = [{\n  id: 1,\n  idUser: 1,\n  title: 'Blockchain developer best practices on innovationchain',\n  data: '3 weeks'\n}, {\n  id: 2,\n  idUser: 2,\n  title: 'Como estilizar um button?',\n  data: '2 weeks'\n}];\nconst likeTopicos = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1\n}, {\n  id: 2,\n  idUser: 2,\n  idTopico: 1\n}];\nconst respostas = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'acho que não ein',\n  data: 'today'\n}, {\n  id: 2,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'calma calabreso',\n  data: 'today'\n}];\nconst likeRespostas = [{\n  id: 1,\n  idUser: 1,\n  idResposta: 1\n}];\nconst QuestionCommentsList = () => {\n  _s();\n  const [answers, SetAnswers] = useState([]);\n  const {\n    idTopic\n  } = useParams();\n  useEffect(() => {\n    /*\r\n    const fetchQuestion = async () => {\r\n        try{\r\n            const responde = await axios.get('api)}\r\n            setQuestion(responde.data)\r\n        } catch (error){\r\n            console.log(\"Error\")}\r\n         }\r\n      fetchQuestion();\r\n       */\n\n    SetAnswers(respostas.filter(resposta => resposta.idTopico === parseInt(idTopic)));\n  }, []);\n  const AddComment = () => {\n    if (newComment) {\n      const newCommentText = {\n        id: comments.length + 1,\n        idUser: idUserLogged,\n        idTopico: parseInt(answer.idTopico),\n        resposta: newComment,\n        data: 'today'\n      };\n      setComments([...comments, newCommentText]);\n      setNewComment('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(QuestionComents, {\n        answer: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"public-comment row\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icone-usuario\",\n        src: imagemUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Adicione um coment\\xE1rio\",\n        value: newComment,\n        className: \"input-text\",\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: AddComment,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionCommentsList, \"+zSS4TYkjsBYklex7uLRAgFou4M=\", false, function () {\n  return [useParams];\n});\n_c = QuestionCommentsList;\nexport default QuestionCommentsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionCommentsList\");","map":{"version":3,"names":["React","useState","useEffect","QuestionComents","useParams","jsxDEV","_jsxDEV","usuario","id","nome","email","senha","topicos","idUser","title","data","likeTopicos","idTopico","respostas","resposta","likeRespostas","idResposta","QuestionCommentsList","_s","answers","SetAnswers","idTopic","filter","parseInt","AddComment","newComment","newCommentText","comments","length","idUserLogged","answer","setComments","setNewComment","children","className","map","fileName","_jsxFileName","lineNumber","columnNumber","src","imagemUser","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/IARA AMANCIO/OneDrive/Desktop/ProjetoIITecWeb/answer-hub/src/components/questionComentsList.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport QuestionComents from \"./questionComents\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst usuario = [\r\n    {id: 1, nome: 'Iara Amancio', email: 'iara@gmail.com', senha: '1234'},\r\n    {id: 2, nome: 'Iara Costa', email: 'iara@gmail.com', senha: '1234'},\r\n]\r\n\r\nconst topicos = [\r\n    {id: 1, idUser: 1, title: 'Blockchain developer best practices on innovationchain', data: '3 weeks'},\r\n    {id: 2, idUser:2, title: 'Como estilizar um button?', data: '2 weeks'},\r\n]\r\n\r\nconst likeTopicos = [\r\n    {id: 1, idUser: 1, idTopico: 1},\r\n    {id: 2, idUser: 2, idTopico: 1},\r\n]\r\n\r\nconst respostas = [\r\n    {id:1, idUser: 1, idTopico: 1, resposta: 'acho que não ein', data: 'today'},\r\n    {id:2, idUser: 1, idTopico: 1, resposta: 'calma calabreso', data: 'today'}\r\n]\r\n\r\nconst likeRespostas = [\r\n    {id: 1, idUser: 1, idResposta: 1},\r\n]\r\n\r\nconst QuestionCommentsList = () => {\r\n    const [answers, SetAnswers] = useState([]);\r\n    const { idTopic } = useParams();\r\n\r\n    useEffect(() => {\r\n\r\n        /*\r\n        const fetchQuestion = async () => {\r\n            try{\r\n                const responde = await axios.get('api)}\r\n                setQuestion(responde.data)\r\n            } catch (error){\r\n                console.log(\"Error\")}\r\n             }\r\n\r\n        fetchQuestion();\r\n\r\n         */\r\n\r\n        SetAnswers(respostas.filter(resposta => resposta.idTopico === parseInt(idTopic)));\r\n    }, []);\r\n\r\n    const AddComment = () => {\r\n    \r\n        if (newComment) {\r\n            const newCommentText = {\r\n                id: comments.length + 1,\r\n                idUser: idUserLogged,  \r\n                idTopico: parseInt(answer.idTopico),\r\n                resposta: newComment,\r\n                data: 'today'\r\n            };\r\n            setComments([...comments, newCommentText]);\r\n            setNewComment('');\r\n        }\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"answers\">\r\n                {answers.map(answer => (\r\n                    <QuestionComents answer={answer}/>\r\n                ))}\r\n            </div>\r\n            <div className=\"public-comment row\">\r\n                <img className='icone-usuario' src={imagemUser}></img>\r\n                <input type=\"text\" placeholder=\"Adicione um comentário\" \r\n                        value={newComment}\r\n                        className='input-text'\r\n                        onChange={(e) => setNewComment(e.target.value)}/>\r\n                <button onClick={AddComment}>SEND</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuestionCommentsList;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}