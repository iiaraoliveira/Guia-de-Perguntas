{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IARA AMANCIO\\\\OneDrive\\\\Desktop\\\\ProjetoIITecWeb\\\\answer-hub\\\\src\\\\components\\\\questionComents.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport imagemUser from '../images/icone-usuario.svg';\n\n/* Todos os comentários*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst respostas = [{\n  id: 1,\n  idUser: 1,\n  idTopico: 1,\n  resposta: 'acho que não ein',\n  data: 'today'\n}, {\n  id: 2,\n  idUser: 2,\n  idTopico: 1,\n  resposta: 'calma calabreso',\n  data: 'today'\n}, {\n  id: 3,\n  idUser: 2,\n  idTopico: 2,\n  resposta: 'Incrivel',\n  data: 'today'\n}];\n\n/* Todas as perguntas*/\nconst topicos = [{\n  id: 1,\n  idUser: 1,\n  title: 'Blockchain developer best practices on innovationchain',\n  data: '3 weeks'\n}, {\n  id: 2,\n  idUser: 2,\n  title: 'Como estilizar um button?',\n  data: '2 weeks'\n}];\n\n/* usuarios */\nconst usuario = [{\n  id: 1,\n  nome: 'Iara Amancio',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}, {\n  id: 2,\n  nome: 'Iara Costa',\n  email: 'iara@gmail.com',\n  senha: '1234'\n}];\nconst likeRespostas = [{\n  id: 1,\n  idUser: 1,\n  idResposta: 1,\n  idTopico: 1\n}];\nconst QuestionComents = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [title, setTitle] = useState('');\n  const [idUser, setIdUser] = useState('');\n  const [newComment, setNewComment] = useState('');\n\n  /* Contador da quantidade de likes */\n  const [contLikesComment, setContLikesComment] = useState(likeRespostas);\n\n  /* Dar like pelo icone de like na pergunta */\n  const [clickLike, setClickLike] = useState(false);\n  useEffect(() => {\n    const topicoId = parseInt(id);\n\n    /* Obter todos os comentários com o mesmo idTopico */\n    const foundComments = respostas.filter(q => q.idTopico === topicoId);\n    setComments(foundComments);\n\n    /* atualizar numero de likes */\n    setContLikesComment(contLikesComment);\n\n    /* Encontrar o titulo dos comentários exibidos */\n    const foundTopic = topicos.find(t => t.id === topicoId);\n    if (foundTopic) {\n      setTitle(foundTopic.title);\n      setIdUser(foundTopic.idUser);\n    }\n    const foundUser = topicos.find(t => t.id === parseInt(id));\n    if (foundUser) {\n      setIdUser(foundUser.idUser);\n    }\n\n    // verifica se o usuario ja deu like assim retorna true ou false\n    const usuarioLiked = contLikesComment.some(like => like.idUser === idUser && like.idTopico === parseInt(id)); // Supondo idUser 1 como o usuário logado\n    setClickLike(usuarioLiked);\n  }, [id]);\n  const AddComment = () => {\n    if (newComment) {\n      const newCommentText = {\n        id: comments.length + 1,\n        idUser: 1,\n        idTopico: parseInt(id),\n        resposta: newComment,\n        data: 'today'\n      };\n      setComments([...comments, newCommentText]);\n      setNewComment('');\n    }\n  };\n\n  /* Somatório dos likes de uma pergunta */\n  const likes = contLikesComment.reduce((soma, like) => {\n    return like.idTopico === parseInt(id) ? soma + 1 : soma;\n  }, 0);\n  const atualizaLikes = () => {\n    if (clickLike)\n      // Se o usuário já deu like, removemos o like \n      {\n        // retorna uma nova lista de likes sem o like do usuario logado\n        let newLikesComments = contLikesComment.filter(like => !(like.idUser === idUser && like.idTopico === parseInt(id)));\n        setContLikesComment(newLikesComments);\n      } else {\n      // se o usuário não deu like, contabilizae cria o novo like\n      setContLikesComment(likeRespostas => [...likeRespostas, {\n        id: likeRespostas.length + 1,\n        idUser: idUser,\n        idResposta: 1,\n        idTopico: id\n      }]);\n    }\n    setClickLike(!clickLike);\n  };\n  const getUserNameById = userId => {\n    const user = usuario.find(u => u.id === userId);\n    return user ? user.nome : 'Usuário desconhecido';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item column-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"titulo-question\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row space-between\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icone-usuario\",\n              src: imagemUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"username\",\n              children: getUserNameById(idUser)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: [comments ? comments.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment column-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer.resposta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"icone-usuario\",\n              src: imagemUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"username\",\n              children: getUserNameById(answer.idUser)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"data\",\n              children: answer.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 20\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Nenhum coment\\xE1rio!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"public-comment row\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"icone-usuario\",\n          src: imagemUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Adicione um coment\\xE1rio\",\n          value: newComment,\n          className: \"input-text\",\n          onChange: e => setNewComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AddComment,\n          children: \"SEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-voltar\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionComents, \"jMggWKyGwWlJaDuYBAjzTAacweE=\", false, function () {\n  return [useParams];\n});\n_c = QuestionComents;\nexport default QuestionComents;\nvar _c;\n$RefreshReg$(_c, \"QuestionComents\");","map":{"version":3,"names":["React","useState","useEffect","useParams","imagemUser","jsxDEV","_jsxDEV","respostas","id","idUser","idTopico","resposta","data","topicos","title","usuario","nome","email","senha","likeRespostas","idResposta","QuestionComents","_s","comments","setComments","setTitle","setIdUser","newComment","setNewComment","contLikesComment","setContLikesComment","clickLike","setClickLike","topicoId","parseInt","foundComments","filter","q","foundTopic","find","t","foundUser","usuarioLiked","some","like","AddComment","newCommentText","length","likes","reduce","soma","atualizaLikes","newLikesComments","getUserNameById","userId","user","u","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","map","answer","index","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/IARA AMANCIO/OneDrive/Desktop/ProjetoIITecWeb/answer-hub/src/components/questionComents.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport imagemUser from '../images/icone-usuario.svg'\r\n\r\n/* Todos os comentários*/\r\nconst respostas = [\r\n    {id:1, idUser: 1, idTopico: 1, resposta: 'acho que não ein', data: 'today'},\r\n    {id:2, idUser: 2, idTopico: 1, resposta: 'calma calabreso', data: 'today'},\r\n    {id:3, idUser: 2, idTopico: 2, resposta: 'Incrivel', data: 'today'}\r\n]\r\n\r\n/* Todas as perguntas*/\r\nconst topicos = [\r\n    {id: 1, idUser: 1, title: 'Blockchain developer best practices on innovationchain', data: '3 weeks'},\r\n    {id: 2, idUser:2, title: 'Como estilizar um button?', data: '2 weeks'},  \r\n]\r\n\r\n/* usuarios */\r\nconst usuario = [\r\n  {id: 1, nome: 'Iara Amancio', email: 'iara@gmail.com', senha: '1234'},\r\n  {id: 2, nome: 'Iara Costa', email: 'iara@gmail.com', senha: '1234'},\r\n]\r\n\r\nconst likeRespostas = [\r\n  {id: 1, idUser: 1, idResposta: 1, idTopico: 1},\r\n]\r\n\r\nconst QuestionComents = () => {\r\n\r\n  const { id } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [idUser, setIdUser] = useState('');\r\n  const [newComment, setNewComment] = useState('');\r\n  \r\n  /* Contador da quantidade de likes */\r\n  const [contLikesComment, setContLikesComment] = useState(likeRespostas);\r\n\r\n   /* Dar like pelo icone de like na pergunta */\r\n   const [clickLike, setClickLike] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n    const topicoId = parseInt(id);\r\n\r\n    /* Obter todos os comentários com o mesmo idTopico */\r\n    const foundComments = respostas.filter(q => q.idTopico === topicoId);\r\n    setComments(foundComments);\r\n\r\n    /* atualizar numero de likes */\r\n    setContLikesComment(contLikesComment);\r\n\r\n    /* Encontrar o titulo dos comentários exibidos */\r\n    const foundTopic = topicos.find(t => t.id === topicoId);\r\n    if(foundTopic){\r\n        setTitle(foundTopic.title);\r\n        setIdUser(foundTopic.idUser)\r\n    }\r\n\r\n    const foundUser = topicos.find(t => t.id === parseInt(id))\r\n    if(foundUser){\r\n      setIdUser(foundUser.idUser)\r\n    }\r\n\r\n      // verifica se o usuario ja deu like assim retorna true ou false\r\n      const usuarioLiked = contLikesComment.some(like => like.idUser === idUser && like.idTopico === parseInt(id)); // Supondo idUser 1 como o usuário logado\r\n      setClickLike(usuarioLiked);\r\n\r\n  }, [id]);\r\n\r\n  const AddComment = () => {\r\n    \r\n    if (newComment) {\r\n        const newCommentText = {\r\n            id: comments.length + 1,\r\n            idUser: 1,  \r\n            idTopico: parseInt(id),\r\n            resposta: newComment,\r\n            data: 'today'\r\n        };\r\n        setComments([...comments, newCommentText]);\r\n        setNewComment('');\r\n    }\r\n    };\r\n\r\n    /* Somatório dos likes de uma pergunta */\r\n  const likes = contLikesComment.reduce((soma, like) => {\r\n    return like.idTopico === parseInt(id) ? soma + 1 : soma;\r\n  }, 0);\r\n\r\n  const atualizaLikes = () =>\r\n    {   \r\n      if (clickLike)\r\n        // Se o usuário já deu like, removemos o like \r\n        {\r\n          // retorna uma nova lista de likes sem o like do usuario logado\r\n          let newLikesComments = contLikesComment.filter(like => !(like.idUser === idUser && like.idTopico === parseInt(id)));\r\n          setContLikesComment(newLikesComments);\r\n        } \r\n        else {\r\n          // se o usuário não deu like, contabilizae cria o novo like\r\n            setContLikesComment(likeRespostas => [...likeRespostas, { id: likeRespostas.length + 1, idUser: idUser,  idResposta: 1, idTopico: id,  }]);\r\n        }\r\n        setClickLike(!clickLike);\r\n    }\r\n\r\n\r\n  const getUserNameById = (userId) => {\r\n    const user = usuario.find(u => u.id === userId);\r\n    return user? user.nome: 'Usuário desconhecido';\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-detail\">\r\n\r\n        <div className=\"question-item column-between\">\r\n            <h3 className='titulo-question'>{title}</h3>\r\n            <div className='row space-between'>\r\n                  <div className='row'>\r\n                      <div>\r\n                          <img className='icone-usuario' src={imagemUser}></img>\r\n                      </div>   \r\n                      <div>\r\n                        <p className='username'>{getUserNameById(idUser)}</p>\r\n                      </div>                 \r\n                  </div>         \r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"answers\">\r\n            {comments? (comments.map((answer, index) => (\r\n            <div key={index} className=\"comment column-between\">\r\n                   <p >{answer.resposta}</p>\r\n                   <div className='row'>\r\n                      <div>\r\n                          <img className='icone-usuario' src={imagemUser}></img>\r\n                      </div>\r\n                      <div>\r\n                        <p className='username'>{getUserNameById(answer.idUser)}</p>\r\n                        <p className='data'>{answer.data}</p>\r\n                      </div>\r\n                  </div>\r\n            </div>\r\n            ))):<div>Nenhum comentário!</div>}\r\n\r\n            <div className=\"public-comment row\">\r\n                <img className='icone-usuario' src={imagemUser}></img>\r\n                <input type=\"text\" placeholder=\"Adicione um comentário\" \r\n                        value={newComment}\r\n                        className='input-text'\r\n                        onChange={(e) => setNewComment(e.target.value)}/>\r\n                <button onClick={AddComment}>SEND</button>\r\n            </div>\r\n        </div>\r\n        <a href='/'><button className='button-voltar'>Voltar</button></a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionComents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}